{"version":3,"sources":["app.js"],"names":["document","addEventListener","onDOMLoaded","content","todos","input","getElementById","loadDB","event","key","push","text","value","status","localStorage","setItem","JSON","stringify","updateUI","parse","getItem","removeItem","list","id","splice","html","map","todo","i","require","join","innerHTML","buttons","getElementsByClassName","index","length","target"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACAA,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8CC,WAA9C,GAEA;;AACA,IAAIC,OAAJ;AACA,IAAIC,KAAJ;AACA,IAAIC,KAAJ;;AAEA,SAASH,WAAT,GAAuB;AAErB;AACAC,EAAAA,OAAO,GAAGH,QAAQ,CAACM,cAAT,CAAwB,OAAxB,CAAV;AACAD,EAAAA,KAAK,GAAGL,QAAQ,CAACM,cAAT,CAAwB,OAAxB,CAAR,CAJqB,CAMrB;;AACAF,EAAAA,KAAK,GAAG,EAAR;AAGAG,EAAAA,MAAM,GAVe,CAYrB;;AACAF,EAAAA,KAAK,CAACJ,gBAAN,CAAuB,OAAvB,EAAgC,UAACO,KAAD,EAAS;AACvC,QAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AACzBL,MAAAA,KAAK,CAACM,IAAN,CAAW;AACTC,QAAAA,IAAI,EAAEN,KAAK,CAACO,KADH;AAETC,QAAAA,MAAM,EAAE;AAFC,OAAX;AAKAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,IAArB,EAA2BC,IAAI,CAACC,SAAL,CAAeb,KAAf,CAA3B,EANyB,CAUzB;;AACAc,MAAAA,QAAQ,CAACd,KAAD,CAAR;AACD;AACF,GAdD,EAbqB,CA6BrB;;AACAc,EAAAA,QAAQ,CAACd,KAAD,CAAR;AAED;;AAGD,SAASG,MAAT,GAAkB;AAChBH,EAAAA,KAAK,GAAGY,IAAI,CAACG,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqB,IAArB,CAAX,CAAR;AACD,EAED;;;AACA,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,EAA1B,EAA8B;AAC5BD,EAAAA,IAAI,CAACE,MAAL,CAAYD,EAAZ,EAAgB,CAAhB;AACAT,EAAAA,YAAY,CAACC,OAAb,CAAqB,IAArB,EAA2BC,IAAI,CAACC,SAAL,CAAeK,IAAf,CAA3B;AACAJ,EAAAA,QAAQ,CAACI,IAAD,CAAR;AACD;;AAID,SAASJ,QAAT,CAAkBd,KAAlB,EAAyB;AACvB;AACA;AACA;AACA,MAAIqB,IAAI,GAAGrB,KAAK,CAACsB,GAAN,CAAU,UAACC,IAAD,EAAOC,CAAP,EAAa;AAChC,yEAEqBD,IAAI,CAACd,MAAL,KAAgB,SAAhB,GAA4B,SAA5B,GAAwC,WAF7D,gBAE6Ec,IAAI,CAAChB,IAFlF,wCAGgBiB,CAHhB,qEAI6BC,OAAO,CAAC,qBAAD,CAJpC;AAQD,GATU,EASRC,IATQ,CASH,IATG,CAAX;AAWA3B,EAAAA,OAAO,CAAC4B,SAAR,GAAoBN,IAApB,CAfuB,CAkBvB;;AACA,MAAIO,OAAO,GAAGhC,QAAQ,CAACiC,sBAAT,CAAgC,QAAhC,CAAd,CAnBuB,CAqBvB;;AACA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,OAAO,CAACG,MAApC,EAA4CD,KAAK,EAAjD,EAAqD;AAEnDF,IAAAA,OAAO,CAACE,KAAD,CAAP,CAAejC,gBAAf,CAAgC,OAAhC,EAAyC,UAACO,KAAD,EAAS;AAChDa,MAAAA,UAAU,CAACjB,KAAD,EAAQI,KAAK,CAAC4B,MAAN,CAAab,EAArB,CAAV;AACD,KAFD;AAID;AAIF","file":"app.c328ef1a.map","sourceRoot":"..","sourcesContent":["// make sure that all the DOM elements are loaded\ndocument.addEventListener('DOMContentLoaded', onDOMLoaded)\n\n// declare handlers for DOM elements\nlet content;\nlet todos;\nlet input;\n\nfunction onDOMLoaded() {\n\n  // assign elements from the DOM to variables\n  content = document.getElementById('todos')\n  input = document.getElementById('input')\n\n  // an array to keep track of our todos\n  todos = []\n\n\n  loadDB()\n\n  // add a new todo to the database every time the user hits enter\n  input.addEventListener('keyup', (event)=>{\n    if (event.key === 'Enter') {\n      todos.push({\n        text: input.value,\n        status: 'UNCHECKED'\n      })\n\n      localStorage.setItem('db', JSON.stringify(todos))\n\n\n\n      // always update the UI with new data\n      updateUI(todos)\n    }\n  })\n\n  // always render something to the user\n  updateUI(todos);\n\n}\n\n\nfunction loadDB() {\n  todos = JSON.parse(localStorage.getItem('db'))\n}\n\n// remove an element then update the UI\nfunction removeItem(list, id) {\n  list.splice(id, 1)\n  localStorage.setItem('db', JSON.stringify(list))\n  updateUI(list)\n}\n\n\n\nfunction updateUI(todos) {\n  // loop through all items in the database\n  // map every item with the template\n  // flat the generated array of html into one big html string\n  let html = todos.map((todo, i) => {\n    return `\n    <div class=\"todo\">\n      <div class=\"text ${todo.status === 'CHECKED' ? 'checked' : 'unchecked'}\">${todo.text}</div>\n      <button id=\"${i}\" class=\"remove\">\n        <img width=\"20px\" src=\"${require('./assets/remove.svg')}\" alt=\"\">\n      </button>\n    </div>\n  `\n  }).join('\\n')\n\n  content.innerHTML = html;\n\n\n  // select all the buttons with class name of REMOVE\n  let buttons = document.getElementsByClassName('remove')\n\n  // loop through all buttons and add click event to it\n  for (let index = 0; index < buttons.length; index++) {\n\n    buttons[index].addEventListener('click', (event)=>{\n      removeItem(todos, event.target.id)\n    })    \n\n  }\n\n\n\n}\n\n\n\n"]}